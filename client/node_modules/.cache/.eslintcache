[{"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\index.tsx":"1","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\App.tsx":"2","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\store\\index.ts":"3","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\store\\hooks.ts":"4","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\store\\slices\\exchange.ts":"5","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\helpers\\index.ts":"6","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\config\\navigation\\index.tsx":"7","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\utils\\index.ts":"8","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\footer\\index.tsx":"9","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\chat\\index.tsx":"10","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\header\\index.tsx":"11","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\order\\index.tsx":"12","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\index.tsx":"13","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\chat\\useChat.ts":"14","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\hooks\\useOrderInfo.ts":"15","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\header\\config\\links.ts":"16","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\index.tsx":"17","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\index.tsx":"18","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\about\\index.tsx":"19","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\txHistory\\index.tsx":"20","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\support\\index.tsx":"21","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\config\\index.ts":"22","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\txHistory\\useHistory.ts":"23","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\index.tsx":"24","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\currencyDropdown\\index.tsx":"25","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\index.tsx":"26","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\index.tsx":"27","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\hooks\\useCurrency.ts":"28","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useForm.ts":"29","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useExchangeRate.ts":"30","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\enum\\index.ts":"31","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\helpers\\index.ts":"32","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\helpers\\index.ts":"33","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\captcha\\index.tsx":"34","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\email\\index.tsx":"35","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\receiver\\index.tsx":"36","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\referalCode\\index.tsx":"37"},{"size":434,"mtime":1678962382000,"results":"38","hashOfConfig":"39"},{"size":683,"mtime":1678962382000,"results":"40","hashOfConfig":"39"},{"size":298,"mtime":1678962382000,"results":"41","hashOfConfig":"39"},{"size":301,"mtime":1678962382000,"results":"42","hashOfConfig":"39"},{"size":3555,"mtime":1678962382000,"results":"43","hashOfConfig":"39"},{"size":1306,"mtime":1687389516206,"results":"44","hashOfConfig":"39"},{"size":845,"mtime":1678962382000,"results":"45","hashOfConfig":"39"},{"size":177,"mtime":1678962382000,"results":"46","hashOfConfig":"39"},{"size":915,"mtime":1678962382000,"results":"47","hashOfConfig":"39"},{"size":1200,"mtime":1678962382000,"results":"48","hashOfConfig":"39"},{"size":5340,"mtime":1678962382000,"results":"49","hashOfConfig":"39"},{"size":7032,"mtime":1678962382000,"results":"50","hashOfConfig":"39"},{"size":479,"mtime":1678962382000,"results":"51","hashOfConfig":"39"},{"size":1766,"mtime":1687388705379,"results":"52","hashOfConfig":"39"},{"size":1279,"mtime":1687388670303,"results":"53","hashOfConfig":"39"},{"size":378,"mtime":1678962382000,"results":"54","hashOfConfig":"39"},{"size":3219,"mtime":1678962382000,"results":"55","hashOfConfig":"39"},{"size":2821,"mtime":1678962382000,"results":"56","hashOfConfig":"39"},{"size":1645,"mtime":1678962382000,"results":"57","hashOfConfig":"39"},{"size":8299,"mtime":1678962382000,"results":"58","hashOfConfig":"39"},{"size":929,"mtime":1678962382000,"results":"59","hashOfConfig":"39"},{"size":126,"mtime":1678962382000,"results":"60","hashOfConfig":"39"},{"size":1863,"mtime":1687389457549,"results":"61","hashOfConfig":"39"},{"size":1845,"mtime":1678962382000,"results":"62","hashOfConfig":"39"},{"size":2469,"mtime":1678962382000,"results":"63","hashOfConfig":"39"},{"size":1763,"mtime":1678962382000,"results":"64","hashOfConfig":"39"},{"size":2952,"mtime":1678962382000,"results":"65","hashOfConfig":"39"},{"size":628,"mtime":1678962382000,"results":"66","hashOfConfig":"39"},{"size":2416,"mtime":1687388729070,"results":"67","hashOfConfig":"39"},{"size":3225,"mtime":1687388693808,"results":"68","hashOfConfig":"39"},{"size":128,"mtime":1678962382000,"results":"69","hashOfConfig":"39"},{"size":741,"mtime":1678962382000,"results":"70","hashOfConfig":"39"},{"size":591,"mtime":1678962382000,"results":"71","hashOfConfig":"39"},{"size":2053,"mtime":1678962382000,"results":"72","hashOfConfig":"39"},{"size":817,"mtime":1678962382000,"results":"73","hashOfConfig":"39"},{"size":1082,"mtime":1678962382000,"results":"74","hashOfConfig":"39"},{"size":724,"mtime":1678962382000,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2m9kq2",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\App.tsx",["194"],[],"import React, { useEffect } from 'react';\nimport AppRouter from './config/navigation';\nimport { chechUserId, getCurrencies } from './helpers';\nimport { useAppDispatch, useAppSelector } from './store/hooks';\nimport { dispatchCurrencies } from './store/slices/exchange';\n\nconst App = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    chechUserId()\n    getCurrencies().then(res => {\n      if (res) {\n        dispatch(dispatchCurrencies(res))\n      }\n    })\n  })\n\n  return (\n    <div className=\"wrapper\">\n      {/* <div className=\"preloader\">\n        <div className=\"preloader__circle\"></div>\n      </div> */}\n      <AppRouter />\n    </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\store\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\store\\hooks.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\store\\slices\\exchange.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\helpers\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\config\\navigation\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\utils\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\footer\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\chat\\index.tsx",["195","196","197"],[],"import { useState, useEffect } from 'react'\r\nimport Chat, { Message } from 'react-simple-chat'\r\nimport 'react-simple-chat/src/components/index.css'\r\nimport './styles.css'\r\nimport chatIcon from '../../assets/openChat.png'\r\nimport sendIcon from '../../assets/sendMessage.png'\r\nimport useChat from './useChat'\r\n\r\nconst CustomChat = () => {\r\n    const {\r\n        messages,\r\n        sendMessage\r\n    } = useChat()\r\n\r\n    return (\r\n        <Chat\r\n            minimized\r\n            headerStyle={{\r\n                borderBottom: '2px solid #9500da7a',\r\n                boxShadow: '0px 4px 2px -2px #9500da38'\r\n            }}\r\n            containerStyle={{\r\n                position: 'fixed',\r\n                boxShadow: '0 0 10px 0 #9500da',\r\n            }}\r\n            leftBubbleStyle={{\r\n                backgroundColor: '#9500da',\r\n            }}\r\n            rightBubbleStyle={{\r\n                backgroundColor: '#9500da',\r\n            }}\r\n            chatIcon={chatIcon}\r\n            sendIcon={sendIcon}\r\n            title=\"Support\"\r\n            user={{ id: 2 }}\r\n            messages={messages}\r\n            onSend={message => sendMessage(message)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CustomChat","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\header\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\order\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\chat\\useChat.ts",["198","199"],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\hooks\\useOrderInfo.ts",["200","201"],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\components\\header\\config\\links.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\about\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\txHistory\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\support\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\config\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\txHistory\\useHistory.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\index.tsx",["202"],[],"import { wait } from \"@testing-library/user-event/dist/utils\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { WalletBonusEnum } from \"./enum\"\r\nimport { chechWalletBonus, getButtonStyles, getButtonText } from \"./helpers\"\r\n\r\nconst WalletBonus = () => {\r\n    const [address, setAddress] = useState('')\r\n    const [isPending, setIsPending] = useState(false)\r\n    const [buttonStatus, setButtonStatus] = useState(WalletBonusEnum.Default)\r\n\r\n    const handleRequest = async () => {\r\n        setIsPending(true)\r\n\r\n        const isValidAddress = chechWalletBonus(address)\r\n\r\n        await wait(1500)\r\n\r\n        if (!isValidAddress) {\r\n            setButtonStatus(WalletBonusEnum.Denied)\r\n        } else {\r\n            setButtonStatus(WalletBonusEnum.Confirmed)\r\n        }\r\n        \r\n        setIsPending(false)\r\n        await wait(1500)\r\n        setButtonStatus(WalletBonusEnum.Default)\r\n    }\r\n\r\n    return (\r\n        <div className=\"how-exchange__block\">\r\n            <div className=\"how-exchange__block-step\">\r\n                Step #1\r\n            </div>\r\n            <h4 className=\"how-exchange__block-title\">\r\n                Check your wallet for 15% bonus!\r\n            </h4>\r\n            <div className=\"how-exchange__block-text\">\r\n                Enter your address to receive bonus!\r\n            </div>\r\n            <input\r\n                className=\"how-exchange__block-input\"\r\n                type=\"text\"\r\n                placeholder=\"Any coin address\"\r\n                value={address}\r\n                onChange={e => setAddress(e.target.value)}\r\n            />\r\n            <button onClick={() => handleRequest()} className={getButtonStyles(buttonStatus)}>\r\n                {\r\n                    getButtonText(buttonStatus, isPending)\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WalletBonus","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\currencyDropdown\\index.tsx",["203"],[],"import { useState } from 'react'\r\nimport './styles.css'\r\nimport arrow from '../../../../../../assets/drop_arrow.svg'\r\nimport { getActiveCurrencyStyle } from '../currenciesList/helpers'\r\nimport { useAppSelector } from '../../../../../../store/hooks'\r\nimport { ICurrency } from '../../../../../../interfaces'\r\nimport { getEnv } from '../../../../../../utils'\r\nimport useCurrency from '../../hooks/useCurrency'\r\n\r\ninterface IProps {\r\n    isTo: boolean,\r\n}\r\n\r\nconst CurrencyDropDown = ({\r\n    isTo,\r\n}: IProps) => {\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const {\r\n        // currencies,\r\n        setFromCurrency,\r\n        setToCurrency,\r\n    } = useCurrency()\r\n\r\n    const toCurrency = useAppSelector(state => state.exchange.toCurrency)\r\n    const fromCurrency = useAppSelector(state => state.exchange.fromCurrency)\r\n    const currencies = useAppSelector(state => state.exchange.currencies)\r\n\r\n    const handleSelectCurrency = (shortName: string, fullName: string) => {\r\n        if (isTo && fromCurrency.fullName !== fullName) {\r\n            setToCurrency(shortName, fullName)\r\n        }\r\n        if (!isTo && toCurrency.fullName !== fullName) {\r\n            setFromCurrency(shortName, fullName)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='drop_container'>\r\n            <div onClick={() => setIsActive(prev => !prev)} className='exchange__block-title'>\r\n                YOU SEND\r\n                <img src={arrow} alt=\"\" />\r\n            </div>\r\n            <div\r\n                className={\r\n                    isActive\r\n                        ? 'dropdown dropdown_active'\r\n                        : 'dropdown'\r\n                }\r\n            >\r\n                {\r\n                    currencies && currencies.map(currency => (\r\n                        <div\r\n                            key={currency.fullName}\r\n                            onClick={() => handleSelectCurrency(currency.shortName, currency.fullName)}\r\n                            className={`exchange__block-item exchange__block-item-send ${getActiveCurrencyStyle(isTo, currency.fullName, fromCurrency.fullName, toCurrency.fullName)}`}\r\n                        >\r\n                            <img src={`${getEnv(process.env.REACT_APP_SERVER_URL, 'REACT_APP_SERVER_URL')}/static/${currency.imageUrlP}.svg`} alt=\"\" />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyDropDown","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\index.tsx",["204","205","206"],[],"import { useEffect, useRef, useState } from \"react\"\r\nimport { useAppSelector } from \"../../../../../../store/hooks\"\r\nimport useExchangeRate from \"./hooks/useExchangeRate\"\r\nimport Captcha from \"./components/captcha\"\r\nimport Email from \"./components/email\"\r\nimport Receiver from \"./components/receiver\"\r\nimport ReferalCode from \"./components/referalCode\"\r\nimport useForm from \"./hooks/useForm\"\r\n\r\nconst Form = () => {\r\n    const {\r\n        fromCurrency,\r\n        toCurrency,\r\n    } = useAppSelector(state => state.exchange)\r\n\r\n    const {\r\n        exchangeRate,\r\n        toCurrencyAmount,\r\n        fromCurrencyAmount,\r\n        setFromCurrencyAmount,\r\n        setToCurrencyAmount,\r\n        setIsChangeInput\r\n    } = useExchangeRate()\r\n\r\n    const {\r\n        sendForm,\r\n    } = useForm()\r\n\r\n    return (\r\n        <form onSubmit={async (e) => await sendForm(e, fromCurrencyAmount, toCurrencyAmount)} className=\"exchange__block-form\">\r\n            <div className=\"exchange__block-wrapper\">\r\n                <div className=\"exchange__block-text exchange__block-text-send\">\r\n                    You send <span>({exchangeRate.fromCurrenycRange.from} — {exchangeRate.fromCurrenycRange.to})</span>\r\n                </div>\r\n                <div className=\"exchange__block-header exchange__block-header-send\">\r\n                    {fromCurrency.fullName}\r\n                </div>\r\n                <input\r\n                    className=\"exchange__block-input exchange__block-input-val exchange__block-input-send\"\r\n                    type=\"number\"\r\n                    step=\"any\"\r\n                    value={fromCurrencyAmount}\r\n                    onChange={e => {\r\n                        setIsChangeInput(true)\r\n                        setFromCurrencyAmount(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"exchange__block-wrapper\">\r\n                <div className=\"exchange__block-text exchange__block-text-receive\">\r\n                    You receive <span>({exchangeRate.toCurrenycRange.from} — {exchangeRate.toCurrenycRange.to})</span>\r\n                </div>\r\n                <div className=\"exchange__block-header exchange__block-header-receive\">\r\n                    {toCurrency.fullName}\r\n                </div>\r\n                <input\r\n                    className=\"exchange__block-input exchange__block-input-val exchange__block-input-receive\"\r\n                    type=\"number\"\r\n                    step=\"any\"\r\n                    value={toCurrencyAmount}\r\n                    onChange={e => {\r\n                        setIsChangeInput(true)\r\n                        setToCurrencyAmount(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n            <Receiver />\r\n            <Email />\r\n            <ReferalCode />\r\n            <Captcha />\r\n            <button className=\"exchange__block-btn\">Continue</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\hooks\\useCurrency.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useForm.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\hooks\\useExchangeRate.ts",["207","208"],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\enum\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\howExchange\\components\\walletBonus\\helpers\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\currenciesList\\helpers\\index.ts",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\captcha\\index.tsx",["209"],[],"import { useEffect, useState } from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../../../../../../../../store/hooks\"\r\nimport { dispatchCaptchaResult, generateCaptcha } from \"../../../../../../../../store/slices/exchange\"\r\n\r\nconst Captcha = () => {\r\n    const [result, setResult] = useState('')\r\n\r\n    const {\r\n        num1,\r\n        num2,\r\n        isValid,\r\n    } = useAppSelector(state => state.exchange.captcha)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!num1 && !num2) {\r\n            dispatch(generateCaptcha())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"exchange__block-wrapper\">\r\n            <div className=\"exchange__block-text\">\r\n                ENTER CAPTCHA\r\n            </div>\r\n            <div className=\"exchange__block-captcha\">\r\n                <input\r\n                    className=\"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-first-num\"\r\n                    readOnly type=\"number\" value={num1} />\r\n                <div className=\"exchange__block-sign\">+</div>\r\n                <input\r\n                    className=\"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-second-num\"\r\n                    readOnly type=\"number\" value={num2} />\r\n                <div className=\"exchange__block-sign\">=</div>\r\n                <input\r\n                    className={\r\n                        isValid\r\n                            ? \"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-sum\"\r\n                            : \"exchange__block-input exchange__block-input-captcha exchange__block-input-captcha-sum exchange_wrong_captcha\"\r\n                    }\r\n                    type=\"number\" value={result} onChange={(e) => {\r\n                        setResult(e.target.value)\r\n                        dispatch(dispatchCaptchaResult(e.target.value))\r\n                    }} name=\"captchaResult\" required />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Captcha","C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\email\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\receiver\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\SimplyEx\\client\\src\\screens\\home\\components\\exchange\\components\\form\\components\\referalCode\\index.tsx",["210","211","212","213"],[],"import { useAppDispatch, useAppSelector } from \"../../../../../../../../store/hooks\"\r\nimport { dispatchEmail, dispatchReferalCode } from \"../../../../../../../../store/slices/exchange\"\r\n\r\nconst ReferalCode = () => {\r\n    const referalCode = localStorage.getItem('ref')\r\n\r\n    return (\r\n        <div className=\"exchange__block-wrapper\">\r\n            <div className=\"exchange__block-text\">\r\n                Referral code\r\n            </div>\r\n            <input\r\n                className=\"exchange__block-input\"\r\n                type=\"text\"\r\n                placeholder=\"Referral code\"\r\n                value={referalCode || ''}\r\n                readOnly\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReferalCode",{"ruleId":"214","severity":1,"message":"215","line":4,"column":26,"nodeType":"216","messageId":"217","endLine":4,"endColumn":40},{"ruleId":"214","severity":1,"message":"218","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":18},{"ruleId":"214","severity":1,"message":"219","line":1,"column":20,"nodeType":"216","messageId":"217","endLine":1,"endColumn":29},{"ruleId":"214","severity":1,"message":"220","line":2,"column":16,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"221","line":1,"column":31,"nodeType":"216","messageId":"217","endLine":1,"endColumn":42},{"ruleId":"214","severity":1,"message":"215","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":24},{"ruleId":"214","severity":1,"message":"218","line":1,"column":21,"nodeType":"216","messageId":"217","endLine":1,"endColumn":29},{"ruleId":"222","severity":1,"message":"223","line":39,"column":8,"nodeType":"224","endLine":39,"endColumn":17,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"219","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":19},{"ruleId":"214","severity":1,"message":"226","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":19},{"ruleId":"214","severity":1,"message":"219","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":19},{"ruleId":"214","severity":1,"message":"227","line":1,"column":21,"nodeType":"216","messageId":"217","endLine":1,"endColumn":27},{"ruleId":"214","severity":1,"message":"218","line":1,"column":29,"nodeType":"216","messageId":"217","endLine":1,"endColumn":37},{"ruleId":"222","severity":1,"message":"228","line":51,"column":8,"nodeType":"224","endLine":51,"endColumn":50,"suggestions":"229"},{"ruleId":"222","severity":1,"message":"230","line":55,"column":8,"nodeType":"224","endLine":55,"endColumn":46,"suggestions":"231"},{"ruleId":"222","severity":1,"message":"232","line":20,"column":8,"nodeType":"224","endLine":20,"endColumn":10,"suggestions":"233"},{"ruleId":"214","severity":1,"message":"234","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":1,"column":26,"nodeType":"216","messageId":"217","endLine":1,"endColumn":40},{"ruleId":"214","severity":1,"message":"235","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"236","line":2,"column":25,"nodeType":"216","messageId":"217","endLine":2,"endColumn":44},"@typescript-eslint/no-unused-vars","'useAppSelector' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Message' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getOrder' and 'order'. Either include them or remove the dependency array.","ArrayExpression",["237"],"'ICurrency' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'getExchangeRate' and 'toCurrencyAmount'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'fromCurrencyAmount' and 'getExchangeRate'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has missing dependencies: 'dispatch', 'num1', and 'num2'. Either include them or remove the dependency array.",["240"],"'useAppDispatch' is defined but never used.","'dispatchEmail' is defined but never used.","'dispatchReferalCode' is defined but never used.",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [getOrder, order, orderId]",{"range":"249","text":"250"},"Update the dependencies array to be: [fromCurrencyAmount, getExchangeRate, isChangeFromCurrency, toCurrencyAmount]",{"range":"251","text":"252"},"Update the dependencies array to be: [toCurrencyAmount, isChangeToCurrency, getExchangeRate, fromCurrencyAmount]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, num1, num2]",{"range":"255","text":"256"},[1144,1153],"[getOrder, order, orderId]",[1891,1933],"[fromCurrencyAmount, getExchangeRate, isChangeFromCurrency, toCurrencyAmount]",[2037,2075],"[toCurrencyAmount, isChangeToCurrency, getExchangeRate, fromCurrencyAmount]",[584,586],"[dispatch, num1, num2]"]