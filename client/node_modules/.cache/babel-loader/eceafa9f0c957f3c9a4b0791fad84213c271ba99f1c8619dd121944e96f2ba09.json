{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  fromCurrency: {\n    shortName: '',\n    fullName: ''\n  },\n  toCurrency: {\n    shortName: '',\n    fullName: ''\n  },\n  captcha: {\n    num1: `${Math.floor(Math.random() * 20)}`,\n    num2: `${Math.floor(Math.random() * 20)}`,\n    result: '',\n    isValid: true\n  },\n  receiver: '',\n  isValidReceiver: true,\n  email: '',\n  referalCode: '',\n  currencies: [],\n  orderInfo: null\n};\nexport const exchangeSile = createSlice({\n  name: 'exchange',\n  initialState,\n  reducers: {\n    dispatchFromCurrency: (state, action) => {\n      if (action.payload) {\n        state.fromCurrency = action.payload;\n      }\n    },\n    dispatchToCurrency: (state, action) => {\n      if (action.payload) {\n        state.toCurrency = action.payload;\n      }\n    },\n    generateCaptcha: state => {\n      state.captcha.num1 = `${Math.floor(Math.random() * 20)}`;\n      state.captcha.num2 = `${Math.floor(Math.random() * 20)}`;\n    },\n    dispatchCaptchaResult: (state, action) => {\n      state.captcha.result = action.payload;\n    },\n    dispatchCaptchaIsValid: (state, action) => {\n      state.captcha.isValid = action.payload;\n    },\n    dispatchReceiver: (state, action) => {\n      state.receiver = action.payload;\n    },\n    dispatchIsValidReceiver: (state, action) => {\n      state.isValidReceiver = action.payload;\n    },\n    dispatchEmail: (state, action) => {\n      state.email = action.payload;\n    },\n    dispatchReferalCode: (state, action) => {\n      state.referalCode = action.payload;\n    },\n    dispatchCurrencies: (state, action) => {\n      state.currencies = action.payload;\n      state.fromCurrency = action.payload[0];\n      state.toCurrency = action.payload[1];\n    },\n    dispatchOrder: (state, action) => {\n      state.orderInfo = action.payload;\n    }\n  }\n});\nexport const {\n  dispatchFromCurrency,\n  dispatchToCurrency,\n  generateCaptcha,\n  dispatchCaptchaResult,\n  dispatchEmail,\n  dispatchReceiver,\n  dispatchIsValidReceiver,\n  dispatchReferalCode,\n  dispatchCaptchaIsValid,\n  dispatchCurrencies,\n  dispatchOrder\n} = exchangeSile.actions;\nexport default exchangeSile.reducer;","map":{"version":3,"names":["createSlice","initialState","fromCurrency","shortName","fullName","toCurrency","captcha","num1","Math","floor","random","num2","result","isValid","receiver","isValidReceiver","email","referalCode","currencies","orderInfo","exchangeSile","name","reducers","dispatchFromCurrency","state","action","payload","dispatchToCurrency","generateCaptcha","dispatchCaptchaResult","dispatchCaptchaIsValid","dispatchReceiver","dispatchIsValidReceiver","dispatchEmail","dispatchReferalCode","dispatchCurrencies","dispatchOrder","actions","reducer"],"sources":["/Users/levanta1s/Desktop/Worker's Club/exchange_front/src/store/slices/exchange.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { ICurrency } from \"../../interfaces\"\r\n\r\ninterface IInitialState {\r\n    fromCurrency: {\r\n        shortName: string,\r\n        fullName: string\r\n    },\r\n    toCurrency: {\r\n        shortName: string,\r\n        fullName: string\r\n    },\r\n    captcha: {\r\n        num1: string,\r\n        num2: string,\r\n        result: string,\r\n        isValid: boolean,\r\n    },\r\n    receiver: string,\r\n    isValidReceiver: boolean,\r\n    email: string,\r\n    referalCode: string,\r\n    currencies: ICurrency[],\r\n    orderInfo: {\r\n        receiveAmount: string,\r\n        receiveCurrency: string,\r\n        sendAmount: string,\r\n        sendCurrency: string,\r\n        receiver: string,\r\n        wallet: string,\r\n        status: string\r\n    } | null\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n    fromCurrency: {\r\n        shortName: '',\r\n        fullName: ''\r\n    },\r\n    toCurrency: {\r\n        shortName: '',\r\n        fullName: ''\r\n    },\r\n    captcha: {\r\n        num1: `${Math.floor(Math.random() * 20)}`,\r\n        num2: `${Math.floor(Math.random() * 20)}`,\r\n        result: '',\r\n        isValid: true,\r\n    },\r\n    receiver: '',\r\n    isValidReceiver: true,\r\n    email: '',\r\n    referalCode: '',\r\n    currencies: [],\r\n    orderInfo: null\r\n}\r\n\r\nexport const exchangeSile = createSlice({\r\n    name: 'exchange',\r\n    initialState,\r\n    reducers: {\r\n        dispatchFromCurrency: (state, action: PayloadAction<IInitialState['fromCurrency']>) => {\r\n            if (action.payload) {\r\n                state.fromCurrency = action.payload\r\n            }\r\n        },\r\n        dispatchToCurrency: (state, action: PayloadAction<IInitialState['toCurrency']>) => {\r\n            if (action.payload) {\r\n                state.toCurrency = action.payload\r\n            }\r\n        },\r\n        generateCaptcha: (state) => {\r\n            state.captcha.num1 = `${Math.floor(Math.random() * 20)}`\r\n            state.captcha.num2 = `${Math.floor(Math.random() * 20)}`\r\n        },\r\n        dispatchCaptchaResult: (state, action: PayloadAction<string>) => {\r\n            state.captcha.result = action.payload\r\n        },\r\n        dispatchCaptchaIsValid: (state, action: PayloadAction<boolean>) => {\r\n            state.captcha.isValid = action.payload\r\n        },\r\n        dispatchReceiver: (state, action: PayloadAction<string>) => {\r\n            state.receiver = action.payload\r\n        },\r\n        dispatchIsValidReceiver: (state, action: PayloadAction<boolean>) => {\r\n            state.isValidReceiver = action.payload\r\n        },\r\n        dispatchEmail: (state, action: PayloadAction<string>) => {\r\n            state.email = action.payload\r\n        },\r\n        dispatchReferalCode: (state, action: PayloadAction<string>) => {\r\n            state.referalCode = action.payload\r\n        },\r\n        dispatchCurrencies: (state, action: PayloadAction<ICurrency[]>) => {\r\n            state.currencies = action.payload\r\n            state.fromCurrency = action.payload[0]\r\n            state.toCurrency = action.payload[1]\r\n        },\r\n        dispatchOrder: (state, action: PayloadAction<IInitialState['orderInfo']>) => {\r\n            state.orderInfo = action.payload\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    dispatchFromCurrency,\r\n    dispatchToCurrency,\r\n    generateCaptcha,\r\n    dispatchCaptchaResult,\r\n    dispatchEmail,\r\n    dispatchReceiver,\r\n    dispatchIsValidReceiver,\r\n    dispatchReferalCode,\r\n    dispatchCaptchaIsValid,\r\n    dispatchCurrencies,\r\n    dispatchOrder\r\n} = exchangeSile.actions\r\nexport default exchangeSile.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}