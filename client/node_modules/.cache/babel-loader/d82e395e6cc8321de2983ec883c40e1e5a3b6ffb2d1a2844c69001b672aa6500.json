{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getEnv } from '../../../../utils';\nconst url = getEnv(process.env.REACT_APP_SERVER_URL, 'REACT_APP_SERVER_URL');\nconst useHistory = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const getHistory = async () => {\n    try {\n      const historyRes = await fetch(`${url}/transactions`).then(res => res.json());\n      setHistory(historyRes.map(elem => ({\n        txHash: elem.txHash,\n        block: elem.block,\n        fromm: elem.fromm,\n        to: elem.to,\n        value: elem.value\n      })));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  useEffect(() => {\n    if (history.length === 0) getHistory();\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      fetch(`${url}/genTrans`).then(res => res.json()).then(res => {\n        const slicedHistory = history.slice(0, -1);\n        setHistory([{\n          txHash: res.txHash,\n          block: res.block,\n          fromm: res.fromAddress,\n          to: res.to,\n          value: res.value\n        }, ...slicedHistory]);\n      });\n    }, 5000);\n    return () => {\n      clearInterval(timer);\n    };\n  });\n  return {\n    history\n  };\n};\n_s(useHistory, \"VmUxS4u0t8RiZeKr4m/wtD9tlfg=\");\nexport default useHistory;","map":{"version":3,"names":["useState","useEffect","getEnv","url","process","env","REACT_APP_SERVER_URL","useHistory","history","setHistory","getHistory","historyRes","fetch","then","res","json","map","elem","txHash","block","fromm","to","value","error","console","message","length","timer","setInterval","slicedHistory","slice","fromAddress","clearInterval"],"sources":["C:/Users/user/Desktop/SimplyEx/client/src/screens/home/components/txHistory/useHistory.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { getEnv } from '../../../../utils'\r\n\r\nconst url = getEnv(process.env.REACT_APP_SERVER_URL, 'REACT_APP_SERVER_URL')\r\n\r\nexport interface IHistoryItem {\r\n    block: string,\r\n    fromm: string,\r\n    to: string,\r\n    txHash: string,\r\n    value: string,\r\n}\r\n\r\nconst useHistory = () => {\r\n    const [history, setHistory] = useState<IHistoryItem[]>([])\r\n\r\n    const getHistory = async () => {\r\n        try {\r\n            const historyRes: IHistoryItem[] = await fetch(`${url}/transactions`).then(res => res.json())\r\n            setHistory(historyRes.map(elem => (\r\n                {\r\n                    txHash: elem.txHash,\r\n                    block: elem.block,\r\n                    fromm: elem.fromm,\r\n                    to: elem.to,\r\n                    value: elem.value\r\n                }\r\n            )))\r\n        } catch (error: any) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (history.length === 0) getHistory()\r\n    })\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            fetch(`${url}/genTrans`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    const slicedHistory = history.slice(0, -1)\r\n                    setHistory([\r\n                        {\r\n                            txHash: res.txHash,\r\n                            block: res.block,\r\n                            fromm: res.fromAddress,\r\n                            to: res.to,\r\n                            value: res.value\r\n                        },\r\n                        ...slicedHistory\r\n                    ])\r\n                })\r\n        }, 5000)\r\n\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    })\r\n\r\n    return {\r\n        history\r\n    }\r\n}\r\n\r\nexport default useHistory"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,mBAAmB;AAE1C,MAAMC,GAAG,GAAGD,MAAM,CAACE,OAAO,CAACC,GAAG,CAACC,oBAAoB,EAAE,sBAAsB,CAAC;AAU5E,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAiB,EAAE,CAAC;EAE1D,MAAMU,UAAU,GAAG,YAAY;IAC3B,IAAI;MACA,MAAMC,UAA0B,GAAG,MAAMC,KAAK,CAAE,GAAET,GAAI,eAAc,CAAC,CAACU,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;MAC7FN,UAAU,CAACE,UAAU,CAACK,GAAG,CAACC,IAAI,KAC1B;QACIC,MAAM,EAAED,IAAI,CAACC,MAAM;QACnBC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,EAAE,EAAEJ,IAAI,CAACI,EAAE;QACXC,KAAK,EAAEL,IAAI,CAACK;MAChB,CAAC,CACJ,CAAC,CAAC;IACP,CAAC,CAAC,OAAOC,KAAU,EAAE;MACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAChC;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZ,IAAIO,OAAO,CAACkB,MAAM,KAAK,CAAC,EAAEhB,UAAU,EAAE;EAC1C,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACZ,MAAM0B,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BhB,KAAK,CAAE,GAAET,GAAI,WAAU,CAAC,CACnBU,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAI;QACT,MAAMe,aAAa,GAAGrB,OAAO,CAACsB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1CrB,UAAU,CAAC,CACP;UACIS,MAAM,EAAEJ,GAAG,CAACI,MAAM;UAClBC,KAAK,EAAEL,GAAG,CAACK,KAAK;UAChBC,KAAK,EAAEN,GAAG,CAACiB,WAAW;UACtBV,EAAE,EAAEP,GAAG,CAACO,EAAE;UACVC,KAAK,EAAER,GAAG,CAACQ;QACf,CAAC,EACD,GAAGO,aAAa,CACnB,CAAC;MACN,CAAC,CAAC;IACV,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACTG,aAAa,CAACL,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,CAAC;EAEF,OAAO;IACHnB;EACJ,CAAC;AACL,CAAC;AAAA,GAnDKD,UAAU;AAqDhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}